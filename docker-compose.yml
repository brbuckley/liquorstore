version: '3.9'

## - - - - - - - - - - NETWORK - - - - - - - - - - - - - - - - - - - - - -

networks:
  default:
    name: kong-net

services:

## - - - - - - - - - - KONG + DB - - - - - - - - - - - - - - - - - - - - - -

#  postgres:
#    image: postgres:9.6-alpine
#    restart: always
#    hostname: kong-database
#    container_name: kong-database
#    environment:
#      POSTGRES_DB: "kong"
#      POSTGRES_USER: "kong"
#      POSTGRES_PASSWORD: "kong"
#    ports:
#      - "5432:5432"
#
#  kong-bootstrap:
#    image: kong:2.5.0-alpine
#    hostname: kong-bootstrap
#    container_name: kong-bootstrap
#    depends_on:
#      - postgres
#    environment:
#      KONG_DATABASE: "postgres"
#      KONG_PG_HOST: "kong-database"
#      KONG_PG_DATABASE: "kong"
#      KONG_PG_USER: "kong"
#      KONG_PG_PASSWORD: "kong"
#    command: "kong migrations bootstrap"
#    restart: 'on-failure'
#
#  kong:
#    image: kong:2.5.0-alpine
#    restart: always
#    hostname: kong
#    container_name: kong
##    user: "${UID}:${GID}"
#    depends_on:
#      - kong-bootstrap
#    environment:
##      KONG_DATABASE: 'off'
#      KONG_DATABASE: "postgres"
#      KONG_PG_HOST: "kong-database"
#      KONG_PG_DATABASE: "kong"
#      KONG_PG_USER: "kong"
#      KONG_PG_PASSWORD: "kong"
#      ## If you want to see Kong's logs
##      KONG_PROXY_ACCESS_LOG: 'dev/stdout'
##      KONG_ADMIN_ACCESS_LOG: 'dev/stdout'
##      KONG_PROXY_ERROR_LOG: 'dev/stderr'
##      KONG_ADMIN_ERROR_LOG: 'dev/stderr'
#      KONG_ADMIN_LISTEN: "0.0.0.0:8001, 0.0.0.0:8444 ssl"
#      ## If you want to add configs during deployment using a yaml file
##      KONG_DECLARATIVE_CONFIG: "/kong/declarative/kong.yaml"
#    command: "kong start"
#    ports:
#      - "8000:8000"
##      "127.0.0.1:8001:8001"
#      - "8001:8001"
#      - "8443:8443"
#      - "8444:8444"
##    volumes:
##      - ./config:/kong/declarative

## - - - - - - - - - - MICROSERVICES - - - - - - - - - - - - - - - - - - - - - -

  rabbitmq:
    container_name: rabbitmq
    hostname: rabbitmq
    image: rabbitmq:3-management
    restart: always
    ports:
      - "15672:15672"

  customer-postgres:
    container_name: customer-postgres
    hostname: customer-postgres
    environment:
      - POSTGRES_USER=brendan
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=customerms
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: postgres
    restart: always

  customer-ms:
    container_name: customer
    hostname: customer
    image: ghcr.io/bbuckley/customerms
    depends_on:
      - customer-postgres
      - rabbitmq
    ports:
      - "8080:8080"

  product-postgres:
    container_name: product-postgres
    hostname: product-postgres
    environment:
      - POSTGRES_USER=brendan
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=productms
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: postgres
    restart: always

  product-ms:
    container_name: product
    hostname: product
    image: ghcr.io/bbuckley/productms
    depends_on:
      - product-postgres
    ports:
      - "8081:8080"

  purchase-postgres:
    container_name: purchase-postgres
    hostname: purchase-postgres
    environment:
      - POSTGRES_USER=brendan
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=purchasems
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: postgres
    restart: always

  purchase-ms:
    container_name: purchase
    hostname: purchase
    environment:
      - POSTGRES_USER=brendan
      - POSTGRES_PASSWORD=123456
      - POSTGRES_DB=purchasems
      - POSTGRES_HOST_AUTH_METHOD=trust
    image: ghcr.io/bbuckley/purchasems
    depends_on:
      - purchase-postgres
      - rabbitmq
    ports:
      - "8082:8080"

  adapter-a:
    container_name: adapter-a
    hostname: adapter-a
    image: ghcr.io/bbuckley/restadapter
    depends_on:
      - rabbitmq

  adapter-b:
    container_name: adapter-b
    hostname: adapter-b
    image: ghcr.io/bbuckley/soapadapter
    depends_on:
      - rabbitmq

  adapter-c:
    container_name: adapter-c
    hostname: adapter-c
    image: ghcr.io/bbuckley/avroadapter
    depends_on:
      - rabbitmq

  wiremock:
    container_name: wiremock
    hostname: wiremock
    ## Build wiremock image from this repository
    build:
      context: .
      dockerfile: dockerfiles/Dockerfile.wiremock

  supplier-c:
    container_name: supplier-c
    hostname: supplier-c
    image: ghcr.io/bbuckley/avrosupplier
    depends_on:
      - rabbitmq

## - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
